import React, { useState } from 'react';
import { Card, CardContent, CardHeader, CardTitle } from './ui/card';
import { Button } from './ui/button';
import { Badge } from './ui/badge';
import { ImageWithFallback } from './figma/ImageWithFallback';
import { useLanguage } from './LanguageProvider';
import { useAuth } from './AuthContext';
import { 
  ClipboardList, 
  FileText, 
  Clock, 
  CheckCircle, 
  AlertCircle,
  Download,
  Upload,
  Calendar,
  User,
  Home,
  Plus,
  ArrowRight
} from 'lucide-react';

export function ServiceApplicationPage() {
  const { t } = useLanguage();
  const { isLoggedIn, user } = useAuth();
  const [selectedService, setSelectedService] = useState<string | null>(null);
  const [showApplicationForm, setShowApplicationForm] = useState(false);

  const services = [
    {
      id: 'birth-certificate',
      name: { en: 'Birth Certificate', mr: '‡§ú‡§®‡•ç‡§Æ ‡§™‡•ç‡§∞‡§Æ‡§æ‡§£‡§™‡§§‡•ç‡§∞' },
      description: { en: 'Apply for birth certificate', mr: '‡§ú‡§®‡•ç‡§Æ ‡§™‡•ç‡§∞‡§Æ‡§æ‡§£‡§™‡§§‡•ç‡§∞‡§æ‡§∏‡§æ‡§†‡•Ä ‡§Ö‡§∞‡•ç‡§ú ‡§ï‡§∞‡§æ' },
      fee: 50,
      processingTime: { en: '7-10 days', mr: '‡•≠-‡•ß‡•¶ ‡§¶‡§ø‡§µ‡§∏' },
      requiredDocs: [
        { en: 'Hospital Birth Record', mr: '‡§π‡•â‡§∏‡•ç‡§™‡§ø‡§ü‡§≤ ‡§ú‡§®‡•ç‡§Æ ‡§®‡•ã‡§Ç‡§¶' },
        { en: 'Parents Aadhaar Card', mr: '‡§™‡§æ‡§≤‡§ï‡§æ‡§Ç‡§ö‡•á ‡§Ü‡§ß‡§æ‡§∞ ‡§ï‡§æ‡§∞‡•ç‡§°' },
        { en: 'Address Proof', mr: '‡§™‡§§‡•ç‡§§‡§æ ‡§™‡•Å‡§∞‡§æ‡§µ‡§æ' }
      ],
      icon: 'üë∂',
      color: 'bg-blue-500'
    },
    {
      id: 'death-certificate',
      name: { en: 'Death Certificate', mr: '‡§Æ‡•É‡§§‡•ç‡§Ø‡•Ç ‡§™‡•ç‡§∞‡§Æ‡§æ‡§£‡§™‡§§‡•ç‡§∞' },
      description: { en: 'Apply for death certificate', mr: '‡§Æ‡•É‡§§‡•ç‡§Ø‡•Ç ‡§™‡•ç‡§∞‡§Æ‡§æ‡§£‡§™‡§§‡•ç‡§∞‡§æ‡§∏‡§æ‡§†‡•Ä ‡§Ö‡§∞‡•ç‡§ú ‡§ï‡§∞‡§æ' },
      fee: 50,
      processingTime: { en: '7-10 days', mr: '‡•≠-‡•ß‡•¶ ‡§¶‡§ø‡§µ‡§∏' },
      requiredDocs: [
        { en: 'Hospital Death Record', mr: '‡§π‡•â‡§∏‡•ç‡§™‡§ø‡§ü‡§≤ ‡§Æ‡•É‡§§‡•ç‡§Ø‡•Ç ‡§®‡•ã‡§Ç‡§¶' },
        { en: 'Family Member ID', mr: '‡§ï‡•Å‡§ü‡•Å‡§Ç‡§¨ ‡§∏‡§¶‡§∏‡•ç‡§Ø‡§æ‡§ö‡§æ ‡§ì‡§≥‡§ñ‡§™‡§§‡•ç‡§∞' },
        { en: 'Address Proof', mr: '‡§™‡§§‡•ç‡§§‡§æ ‡§™‡•Å‡§∞‡§æ‡§µ‡§æ' }
      ],
      icon: 'üìÑ',
      color: 'bg-gray-500'
    },
    {
      id: 'income-certificate',
      name: { en: 'Income Certificate', mr: '‡§â‡§§‡•ç‡§™‡§®‡•ç‡§® ‡§™‡•ç‡§∞‡§Æ‡§æ‡§£‡§™‡§§‡•ç‡§∞' },
      description: { en: 'Apply for income certificate', mr: '‡§â‡§§‡•ç‡§™‡§®‡•ç‡§® ‡§™‡•ç‡§∞‡§Æ‡§æ‡§£‡§™‡§§‡•ç‡§∞‡§æ‡§∏‡§æ‡§†‡•Ä ‡§Ö‡§∞‡•ç‡§ú ‡§ï‡§∞‡§æ' },
      fee: 30,
      processingTime: { en: '5-7 days', mr: '‡•´-‡•≠ ‡§¶‡§ø‡§µ‡§∏' },
      requiredDocs: [
        { en: 'Salary Certificate', mr: '‡§™‡§ó‡§æ‡§∞ ‡§™‡•ç‡§∞‡§Æ‡§æ‡§£‡§™‡§§‡•ç‡§∞' },
        { en: 'Bank Statements', mr: '‡§¨‡§Å‡§ï ‡§∏‡•ç‡§ü‡•á‡§ü‡§Æ‡•á‡§Ç‡§ü' },
        { en: 'Aadhaar Card', mr: '‡§Ü‡§ß‡§æ‡§∞ ‡§ï‡§æ‡§∞‡•ç‡§°' }
      ],
      icon: 'üí∞',
      color: 'bg-green-500'
    },
    {
      id: 'residence-certificate',
      name: { en: 'Residence Certificate', mr: '‡§®‡§ø‡§µ‡§æ‡§∏ ‡§™‡•ç‡§∞‡§Æ‡§æ‡§£‡§™‡§§‡•ç‡§∞' },
      description: { en: 'Apply for residence certificate', mr: '‡§®‡§ø‡§µ‡§æ‡§∏ ‡§™‡•ç‡§∞‡§Æ‡§æ‡§£‡§™‡§§‡•ç‡§∞‡§æ‡§∏‡§æ‡§†‡•Ä ‡§Ö‡§∞‡•ç‡§ú ‡§ï‡§∞‡§æ' },
      fee: 30,
      processingTime: { en: '5-7 days', mr: '‡•´-‡•≠ ‡§¶‡§ø‡§µ‡§∏' },
      requiredDocs: [
        { en: 'Aadhaar Card', mr: '‡§Ü‡§ß‡§æ‡§∞ ‡§ï‡§æ‡§∞‡•ç‡§°' },
        { en: 'Utility Bills', mr: '‡§Ø‡•Å‡§ü‡§ø‡§≤‡§ø‡§ü‡•Ä ‡§¨‡§ø‡§≤‡•ç‡§∏' },
        { en: 'Ration Card', mr: '‡§∞‡•á‡§∂‡§® ‡§ï‡§æ‡§∞‡•ç‡§°' }
      ],
      icon: 'üè†',
      color: 'bg-orange-500'
    },
    {
      id: 'caste-certificate',
      name: { en: 'Caste Certificate', mr: '‡§ú‡§æ‡§§‡•Ä ‡§™‡•ç‡§∞‡§Æ‡§æ‡§£‡§™‡§§‡•ç‡§∞' },
      description: { en: 'Apply for caste certificate', mr: '‡§ú‡§æ‡§§‡•Ä ‡§™‡•ç‡§∞‡§Æ‡§æ‡§£‡§™‡§§‡•ç‡§∞‡§æ‡§∏‡§æ‡§†‡•Ä ‡§Ö‡§∞‡•ç‡§ú ‡§ï‡§∞‡§æ' },
      fee: 30,
      processingTime: { en: '10-15 days', mr: '‡•ß‡•¶-‡•ß‡•´ ‡§¶‡§ø‡§µ‡§∏' },
      requiredDocs: [
        { en: 'Aadhaar Card', mr: '‡§Ü‡§ß‡§æ‡§∞ ‡§ï‡§æ‡§∞‡•ç‡§°' },
        { en: 'School Leaving Certificate', mr: '‡§∂‡§æ‡§≥‡§æ ‡§∏‡•ã‡§°‡§≤‡•ç‡§Ø‡§æ‡§ö‡•á ‡§™‡•ç‡§∞‡§Æ‡§æ‡§£‡§™‡§§‡•ç‡§∞' },
        { en: 'Family Caste Certificate', mr: '‡§ï‡•Å‡§ü‡•Å‡§Ç‡§¨‡§æ‡§ö‡•á ‡§ú‡§æ‡§§‡•Ä ‡§™‡•ç‡§∞‡§Æ‡§æ‡§£‡§™‡§§‡•ç‡§∞' }
      ],
      icon: 'üìã',
      color: 'bg-purple-500'
    },
    {
      id: 'marriage-registration',
      name: { en: 'Marriage Registration', mr: '‡§µ‡§ø‡§µ‡§æ‡§π ‡§®‡•ã‡§Ç‡§¶‡§£‡•Ä' },
      description: { en: 'Register your marriage', mr: '‡§Ü‡§™‡§≤‡•á ‡§≤‡§ó‡•ç‡§® ‡§®‡•ã‡§Ç‡§¶‡§µ‡§æ' },
      fee: 100,
      processingTime: { en: '15-30 days', mr: '‡•ß‡•´-‡•©‡•¶ ‡§¶‡§ø‡§µ‡§∏' },
      requiredDocs: [
        { en: 'Marriage Invitation', mr: '‡§≤‡§ó‡•ç‡§®‡§æ‡§ö‡•á ‡§®‡§ø‡§Æ‡§Ç‡§§‡•ç‡§∞‡§£‡§™‡§§‡•ç‡§∞' },
        { en: 'Age Proof of Both', mr: '‡§¶‡•ã‡§ò‡§æ‡§Ç‡§ö‡§æ ‡§µ‡§Ø ‡§™‡•Å‡§∞‡§æ‡§µ‡§æ' },
        { en: 'Witness Documents', mr: '‡§∏‡§æ‡§ï‡•ç‡§∑‡•Ä‡§¶‡§æ‡§∞‡§æ‡§Ç‡§ö‡•á ‡§ï‡§æ‡§ó‡§¶‡§™‡§§‡•ç‡§∞‡•á' }
      ],
      icon: 'üíç',
      color: 'bg-pink-500'
    }
  ];

  const myApplications = [
    {
      id: 'APP001',
      serviceId: 'birth-certificate',
      serviceName: { en: 'Birth Certificate', mr: '‡§ú‡§®‡•ç‡§Æ ‡§™‡•ç‡§∞‡§Æ‡§æ‡§£‡§™‡§§‡•ç‡§∞' },
      applicationDate: '2024-01-15',
      status: 'in-progress',
      estimatedCompletion: '2024-01-25',
      trackingNumber: 'BC2024001'
    },
    {
      id: 'APP002',
      serviceId: 'income-certificate',
      serviceName: { en: 'Income Certificate', mr: '‡§â‡§§‡•ç‡§™‡§®‡•ç‡§® ‡§™‡•ç‡§∞‡§Æ‡§æ‡§£‡§™‡§§‡•ç‡§∞' },
      applicationDate: '2024-01-10',
      status: 'completed',
      completedDate: '2024-01-17',
      trackingNumber: 'IC2024002'
    },
    {
      id: 'APP003',
      serviceId: 'residence-certificate',
      serviceName: { en: 'Residence Certificate', mr: '‡§®‡§ø‡§µ‡§æ‡§∏ ‡§™‡•ç‡§∞‡§Æ‡§æ‡§£‡§™‡§§‡•ç‡§∞' },
      applicationDate: '2024-01-08',
      status: 'pending',
      trackingNumber: 'RC2024003'
    }
  ];

  const getStatusColor = (status: string) => {
    switch (status) {
      case 'pending': return 'bg-yellow-500';
      case 'in-progress': return 'bg-blue-500';
      case 'completed': return 'bg-green-500';
      case 'rejected': return 'bg-red-500';
      default: return 'bg-gray-500';
    }
  };

  const getStatusIcon = (status: string) => {
    switch (status) {
      case 'pending': return <Clock className="h-4 w-4" />;
      case 'in-progress': return <AlertCircle className="h-4 w-4" />;
      case 'completed': return <CheckCircle className="h-4 w-4" />;
      default: return <Clock className="h-4 w-4" />;
    }
  };

  return (
    <div className="min-h-screen bg-orange-50 p-4">
      <div className="container mx-auto max-w-7xl">
        {/* Header */}
        <div className="text-center mb-8">
          <div className="w-20 h-20 bg-service rounded-full flex items-center justify-center mx-auto mb-4">
            <ClipboardList className="h-10 w-10 text-white" />
          </div>
          <h1 className="text-4xl font-bold text-gray-900 mb-2">
            {t({ en: 'Service Applications', mr: '‡§∏‡•á‡§µ‡§æ ‡§Ö‡§∞‡•ç‡§ú' })}
          </h1>
          <p className="text-gray-600 text-lg">
            {t({ en: 'Apply for various government services online', mr: '‡§µ‡§ø‡§µ‡§ø‡§ß ‡§∏‡§∞‡§ï‡§æ‡§∞‡•Ä ‡§∏‡•á‡§µ‡§æ‡§Ç‡§∏‡§æ‡§†‡•Ä ‡§ë‡§®‡§≤‡§æ‡§á‡§® ‡§Ö‡§∞‡•ç‡§ú ‡§ï‡§∞‡§æ' })}
          </p>
        </div>

        {/* Hero Image */}
        <div className="mb-8">
          <div className="relative h-64 rounded-2xl overflow-hidden">
            <ImageWithFallback
              src="https://images.unsplash.com/photo-1604218118561-4bc4427d1e7e?crop=entropy&cs=tinysrgb&fit=max&fm=jpg&ixid=M3w3Nzg4Nzd8MHwxfHNlYXJjaHwxfHxnb3Zlcm5tZW50JTIwb2ZmaWNlJTIwZG9jdW1lbnRzJTIwYXBwbGljYXRpb25zfGVufDF8fHx8MTc1NTQ1NDQxNHww&ixlib=rb-4.1.0&q=80&w=1080&utm_source=figma&utm_medium=referral"
              alt="Government services"
              className="w-full h-full object-cover"
            />
            <div className="absolute inset-0 bg-black/30"></div>
            <div className="absolute inset-0 flex items-center justify-center">
              <div className="text-center text-white">
                <h2 className="text-3xl font-bold mb-2">
                  {t({ en: 'Digital Government Services', mr: '‡§°‡§ø‡§ú‡§ø‡§ü‡§≤ ‡§∏‡§∞‡§ï‡§æ‡§∞‡•Ä ‡§∏‡•á‡§µ‡§æ' })}
                </h2>
                <p className="text-lg opacity-90">
                  {t({ en: 'Fast, secure, and convenient online applications', mr: '‡§µ‡•á‡§ó‡§µ‡§æ‡§®, ‡§∏‡•Å‡§∞‡§ï‡•ç‡§∑‡§ø‡§§ ‡§Ü‡§£‡§ø ‡§∏‡•ã‡§Ø‡•Ä‡§∏‡•ç‡§ï‡§∞ ‡§ë‡§®‡§≤‡§æ‡§á‡§® ‡§Ö‡§∞‡•ç‡§ú' })}
                </p>
              </div>
            </div>
          </div>
        </div>

        <div className="grid lg:grid-cols-3 gap-8">
          {/* Services List */}
          <div className="lg:col-span-2">
            <Card className="mb-6">
              <CardHeader>
                <CardTitle className="flex items-center gap-3">
                  <FileText className="h-6 w-6 text-service" />
                  {t({ en: 'Available Services', mr: '‡§â‡§™‡§≤‡§¨‡•ç‡§ß ‡§∏‡•á‡§µ‡§æ' })}
                </CardTitle>
              </CardHeader>
              <CardContent>
                <div className="grid md:grid-cols-2 gap-4">
                  {services.map((service) => (
                    <Card 
                      key={service.id} 
                      className={`cursor-pointer transition-all hover:shadow-lg ${
                        selectedService === service.id ? 'ring-2 ring-service border-service' : ''
                      }`}
                      onClick={() => setSelectedService(service.id)}
                    >
                      <CardContent className="p-4">
                        <div className="flex items-start gap-3">
                          <div className={`w-12 h-12 ${service.color} rounded-lg flex items-center justify-center text-white text-xl`}>
                            {service.icon}
                          </div>
                          <div className="flex-1">
                            <h3 className="font-bold mb-1">{t(service.name)}</h3>
                            <p className="text-sm text-gray-600 mb-2">{t(service.description)}</p>
                            <div className="flex items-center justify-between text-xs">
                              <span className="text-green-600 font-medium">‚Çπ{service.fee}</span>
                              <span className="text-gray-500">{t(service.processingTime)}</span>
                            </div>
                          </div>
                        </div>
                        
                        {selectedService === service.id && (
                          <div className="mt-4 pt-4 border-t">
                            <h4 className="font-medium mb-2">
                              {t({ en: 'Required Documents:', mr: '‡§Ü‡§µ‡§∂‡•ç‡§Ø‡§ï ‡§ï‡§æ‡§ó‡§¶‡§™‡§§‡•ç‡§∞‡•á:' })}
                            </h4>
                            <ul className="text-sm text-gray-600 space-y-1">
                              {service.requiredDocs.map((doc, index) => (
                                <li key={index} className="flex items-center gap-2">
                                  <div className="w-1.5 h-1.5 bg-service rounded-full"></div>
                                  {t(doc)}
                                </li>
                              ))}
                            </ul>
                            <Button 
                              className="w-full mt-4 bg-service hover:bg-service/90 text-service-foreground"
                              onClick={() => {
                                if (isLoggedIn) {
                                  setShowApplicationForm(true);
                                } else {
                                  alert(t({ en: 'Please login to apply', mr: '‡§Ö‡§∞‡•ç‡§ú ‡§ï‡§∞‡§£‡•ç‡§Ø‡§æ‡§∏‡§æ‡§†‡•Ä ‡§ï‡•É‡§™‡§Ø‡§æ ‡§≤‡•â‡§ó‡§ø‡§® ‡§ï‡§∞‡§æ' }));
                                }
                              }}
                            >
                              <Plus className="h-4 w-4 mr-2" />
                              {t({ en: 'Apply Now', mr: '‡§Ü‡§§‡§æ ‡§Ö‡§∞‡•ç‡§ú ‡§ï‡§∞‡§æ' })}
                            </Button>
                          </div>
                        )}
                      </CardContent>
                    </Card>
                  ))}
                </div>
              </CardContent>
            </Card>

            {/* Application Form */}
            {showApplicationForm && selectedService && (
              <Card className="border-service border-2">
                <CardHeader>
                  <CardTitle className="text-service">
                    {t({ en: 'Application Form', mr: '‡§Ö‡§∞‡•ç‡§ú‡§æ‡§ö‡§æ ‡§´‡•â‡§∞‡•ç‡§Æ' })} - {t(services.find(s => s.id === selectedService)?.name || { en: '', mr: '' })}
                  </CardTitle>
                </CardHeader>
                <CardContent>
                  <div className="space-y-4">
                    <div className="grid md:grid-cols-2 gap-4">
                      <div>
                        <label className="block text-sm font-medium mb-2">
                          {t({ en: 'Full Name', mr: '‡§™‡•Ç‡§∞‡•ç‡§£ ‡§®‡§æ‡§µ' })} *
                        </label>
                        <input 
                          className="w-full p-3 border rounded-lg focus:outline-none focus:ring-2 focus:ring-service"
                          placeholder={t({ en: 'Enter full name', mr: '‡§™‡•Ç‡§∞‡•ç‡§£ ‡§®‡§æ‡§µ ‡§ü‡§æ‡§ï‡§æ' })}
                          defaultValue={user?.name || ''}
                        />
                      </div>
                      <div>
                        <label className="block text-sm font-medium mb-2">
                          {t({ en: 'Mobile Number', mr: '‡§Æ‡•ã‡§¨‡§æ‡§á‡§≤ ‡§®‡§Ç‡§¨‡§∞' })} *
                        </label>
                        <input 
                          className="w-full p-3 border rounded-lg focus:outline-none focus:ring-2 focus:ring-service"
                          placeholder={t({ en: 'Enter mobile number', mr: '‡§Æ‡•ã‡§¨‡§æ‡§á‡§≤ ‡§®‡§Ç‡§¨‡§∞ ‡§ü‡§æ‡§ï‡§æ' })}
                          defaultValue={user?.phone || ''}
                        />
                      </div>
                      <div>
                        <label className="block text-sm font-medium mb-2">
                          {t({ en: 'House Number', mr: '‡§ò‡§∞ ‡§ï‡•ç‡§∞‡§Æ‡§æ‡§Ç‡§ï' })} *
                        </label>
                        <input 
                          className="w-full p-3 border rounded-lg focus:outline-none focus:ring-2 focus:ring-service"
                          placeholder={t({ en: 'Enter house number', mr: '‡§ò‡§∞ ‡§ï‡•ç‡§∞‡§Æ‡§æ‡§Ç‡§ï ‡§ü‡§æ‡§ï‡§æ' })}
                          defaultValue={user?.houseNumber || ''}
                        />
                      </div>
                      <div>
                        <label className="block text-sm font-medium mb-2">
                          {t({ en: 'Ward Number', mr: '‡§µ‡§æ‡§∞‡•ç‡§° ‡§ï‡•ç‡§∞‡§Æ‡§æ‡§Ç‡§ï' })} *
                        </label>
                        <input 
                          className="w-full p-3 border rounded-lg focus:outline-none focus:ring-2 focus:ring-service"
                          placeholder={t({ en: 'Enter ward number', mr: '‡§µ‡§æ‡§∞‡•ç‡§° ‡§ï‡•ç‡§∞‡§Æ‡§æ‡§Ç‡§ï ‡§ü‡§æ‡§ï‡§æ' })}
                          defaultValue={user?.wardNumber || ''}
                        />
                      </div>
                    </div>
                    
                    <div>
                      <label className="block text-sm font-medium mb-2">
                        {t({ en: 'Additional Details', mr: '‡§Ö‡§§‡§ø‡§∞‡§ø‡§ï‡•ç‡§§ ‡§§‡§™‡§∂‡•Ä‡§≤' })}
                      </label>
                      <textarea 
                        rows={3}
                        className="w-full p-3 border rounded-lg focus:outline-none focus:ring-2 focus:ring-service resize-none"
                        placeholder={t({ en: 'Enter any additional information', mr: '‡§ï‡•ã‡§£‡§§‡•Ä‡§π‡•Ä ‡§Ö‡§§‡§ø‡§∞‡§ø‡§ï‡•ç‡§§ ‡§Æ‡§æ‡§π‡§ø‡§§‡•Ä ‡§ü‡§æ‡§ï‡§æ' })}
                      />
                    </div>
                    
                    <div>
                      <label className="block text-sm font-medium mb-2">
                        {t({ en: 'Upload Documents', mr: '‡§ï‡§æ‡§ó‡§¶‡§™‡§§‡•ç‡§∞‡•á ‡§Ö‡§™‡§≤‡•ã‡§° ‡§ï‡§∞‡§æ' })} *
                      </label>
                      <div className="border-2 border-dashed border-gray-300 rounded-lg p-6 text-center hover:bg-gray-50 cursor-pointer">
                        <Upload className="h-8 w-8 text-gray-400 mx-auto mb-2" />
                        <p className="text-gray-600">
                          {t({ en: 'Click to upload documents or drag and drop', mr: '‡§ï‡§æ‡§ó‡§¶‡§™‡§§‡•ç‡§∞‡•á ‡§Ö‡§™‡§≤‡•ã‡§° ‡§ï‡§∞‡§£‡•ç‡§Ø‡§æ‡§∏‡§æ‡§†‡•Ä ‡§ï‡•ç‡§≤‡§ø‡§ï ‡§ï‡§∞‡§æ ‡§ï‡§ø‡§Ç‡§µ‡§æ ‡§°‡•ç‡§∞‡•Ö‡§ó ‡§Ö‡§Å‡§° ‡§°‡•ç‡§∞‡•â‡§™ ‡§ï‡§∞‡§æ' })}
                        </p>
                        <p className="text-xs text-gray-500 mt-1">
                          {t({ en: 'PDF, JPG, PNG files up to 5MB each', mr: '‡§™‡•ç‡§∞‡§§‡•ç‡§Ø‡•á‡§ï‡•Ä 5MB ‡§™‡§∞‡•ç‡§Ø‡§Ç‡§§‡§ö‡•ç‡§Ø‡§æ PDF, JPG, PNG ‡§´‡§æ‡§á‡§≤‡•ç‡§∏' })}
                        </p>
                      </div>
                    </div>
                    
                    <div className="flex gap-3">
                      <Button className="bg-service hover:bg-service/90 text-service-foreground">
                        {t({ en: 'Submit Application', mr: '‡§Ö‡§∞‡•ç‡§ú ‡§∏‡§¨‡§Æ‡§ø‡§ü ‡§ï‡§∞‡§æ' })}
                      </Button>
                      <Button variant="outline" onClick={() => setShowApplicationForm(false)}>
                        {t({ en: 'Cancel', mr: '‡§∞‡§¶‡•ç‡§¶ ‡§ï‡§∞‡§æ' })}
                      </Button>
                    </div>
                  </div>
                </CardContent>
              </Card>
            )}
          </div>

          {/* Sidebar */}
          <div className="space-y-6">
            {/* My Applications */}
            {isLoggedIn ? (
              <Card>
                <CardHeader>
                  <CardTitle className="flex items-center gap-3">
                    <User className="h-5 w-5" />
                    {t({ en: 'My Applications', mr: '‡§Æ‡§æ‡§ù‡•á ‡§Ö‡§∞‡•ç‡§ú' })}
                  </CardTitle>
                </CardHeader>
                <CardContent>
                  <div className="space-y-3">
                    {myApplications.map((app) => (
                      <div key={app.id} className="p-3 border rounded-lg">
                        <div className="flex justify-between items-start mb-2">
                          <h4 className="font-medium text-sm">{t(app.serviceName)}</h4>
                          <Badge className={`${getStatusColor(app.status)} text-white`}>
                            {getStatusIcon(app.status)}
                            <span className="ml-1 capitalize">{app.status}</span>
                          </Badge>
                        </div>
                        <p className="text-xs text-gray-600 mb-1">
                          {t({ en: `Applied: ${app.applicationDate}`, mr: `‡§Ö‡§∞‡•ç‡§ú: ${app.applicationDate}` })}
                        </p>
                        <p className="text-xs text-gray-600">
                          {t({ en: `Tracking: ${app.trackingNumber}`, mr: `‡§ü‡•ç‡§∞‡•Ö‡§ï‡§ø‡§Ç‡§ó: ${app.trackingNumber}` })}
                        </p>
                        {app.status === 'completed' && (
                          <Button size="sm" variant="outline" className="w-full mt-2">
                            <Download className="h-3 w-3 mr-1" />
                            {t({ en: 'Download', mr: '‡§°‡§æ‡§â‡§®‡§≤‡•ã‡§°' })}
                          </Button>
                        )}
                      </div>
                    ))}
                  </div>
                </CardContent>
              </Card>
            ) : (
              <Card className="bg-orange-50 border-orange-200">
                <CardContent className="p-6 text-center">
                  <div className="w-16 h-16 bg-orange-500 rounded-full flex items-center justify-center mx-auto mb-4">
                    <User className="h-8 w-8 text-white" />
                  </div>
                  <h4 className="font-bold mb-2 text-orange-800">
                    {t({ en: 'Login Required', mr: '‡§≤‡•â‡§ó‡§ø‡§® ‡§Ü‡§µ‡§∂‡•ç‡§Ø‡§ï' })}
                  </h4>
                  <p className="text-orange-700 text-sm mb-4">
                    {t({ 
                      en: 'Login to apply for services and track your applications',
                      mr: '‡§∏‡•á‡§µ‡§æ‡§Ç‡§∏‡§æ‡§†‡•Ä ‡§Ö‡§∞‡•ç‡§ú ‡§ï‡§∞‡§£‡•ç‡§Ø‡§æ‡§∏‡§æ‡§†‡•Ä ‡§Ü‡§£‡§ø ‡§Ü‡§™‡§≤‡•ç‡§Ø‡§æ ‡§Ö‡§∞‡•ç‡§ú‡§æ‡§Ç‡§ö‡§æ ‡§Æ‡§æ‡§ó‡•ã‡§µ‡§æ ‡§ò‡•á‡§£‡•ç‡§Ø‡§æ‡§∏‡§æ‡§†‡•Ä ‡§≤‡•â‡§ó‡§ø‡§® ‡§ï‡§∞‡§æ'
                    })}
                  </p>
                  <Button className="bg-orange-600 hover:bg-orange-700 text-white">
                    {t({ en: 'Login Now', mr: '‡§Ü‡§§‡§æ ‡§≤‡•â‡§ó‡§ø‡§® ‡§ï‡§∞‡§æ' })}
                  </Button>
                </CardContent>
              </Card>
            )}

            {/* Quick Guide */}
            <Card>
              <CardHeader>
                <CardTitle>
                  {t({ en: 'Quick Guide', mr: '‡§¶‡•ç‡§∞‡•Å‡§§ ‡§Æ‡§æ‡§∞‡•ç‡§ó‡§¶‡§∞‡•ç‡§∂‡§ï' })}
                </CardTitle>
              </CardHeader>
              <CardContent>
                <div className="space-y-3 text-sm">
                  <div className="flex items-start gap-3">
                    <div className="w-6 h-6 bg-service rounded-full flex items-center justify-center text-white text-xs">1</div>
                    <p>{t({ en: 'Select the service you need', mr: '‡§Ü‡§™‡§≤‡•ç‡§Ø‡§æ‡§≤‡§æ ‡§Ü‡§µ‡§∂‡•ç‡§Ø‡§ï ‡§Ö‡§∏‡§≤‡•á‡§≤‡•Ä ‡§∏‡•á‡§µ‡§æ ‡§®‡§ø‡§µ‡§°‡§æ' })}</p>
                  </div>
                  <div className="flex items-start gap-3">
                    <div className="w-6 h-6 bg-service rounded-full flex items-center justify-center text-white text-xs">2</div>
                    <p>{t({ en: 'Fill the application form', mr: '‡§Ö‡§∞‡•ç‡§ú‡§æ‡§ö‡§æ ‡§´‡•â‡§∞‡•ç‡§Æ ‡§≠‡§∞‡§æ' })}</p>
                  </div>
                  <div className="flex items-start gap-3">
                    <div className="w-6 h-6 bg-service rounded-full flex items-center justify-center text-white text-xs">3</div>
                    <p>{t({ en: 'Upload required documents', mr: '‡§Ü‡§µ‡§∂‡•ç‡§Ø‡§ï ‡§ï‡§æ‡§ó‡§¶‡§™‡§§‡•ç‡§∞‡•á ‡§Ö‡§™‡§≤‡•ã‡§° ‡§ï‡§∞‡§æ' })}</p>
                  </div>
                  <div className="flex items-start gap-3">
                    <div className="w-6 h-6 bg-service rounded-full flex items-center justify-center text-white text-xs">4</div>
                    <p>{t({ en: 'Track your application status', mr: '‡§Ü‡§™‡§≤‡•ç‡§Ø‡§æ ‡§Ö‡§∞‡•ç‡§ú‡§æ‡§ö‡•ç‡§Ø‡§æ ‡§∏‡•ç‡§•‡§ø‡§§‡•Ä‡§ö‡§æ ‡§Æ‡§æ‡§ó‡•ã‡§µ‡§æ ‡§ò‡•ç‡§Ø‡§æ' })}</p>
                  </div>
                </div>
              </CardContent>
            </Card>

            {/* Help */}
            <Card className="bg-orange-50 border-orange-200">
              <CardContent className="p-4 text-center">
                <h4 className="font-bold mb-2 text-orange-800">
                  {t({ en: 'Need Assistance?', mr: '‡§Æ‡§¶‡§§ ‡§π‡§µ‡•Ä?' })}
                </h4>
                <p className="text-orange-700 text-sm mb-3">
                  {t({ 
                    en: 'Contact our service desk for help',
                    mr: '‡§Æ‡§¶‡§§‡•Ä‡§∏‡§æ‡§†‡•Ä ‡§Ü‡§Æ‡§ö‡•ç‡§Ø‡§æ ‡§∏‡•á‡§µ‡§æ ‡§°‡•á‡§∏‡•ç‡§ï‡§∂‡•Ä ‡§∏‡§Ç‡§™‡§∞‡•ç‡§ï ‡§∏‡§æ‡§ß‡§æ'
                  })}
                </p>
                <Button variant="outline" size="sm" className="border-orange-300 text-orange-700">
                  üìû +91 20 1234 5681
                </Button>
              </CardContent>
            </Card>
          </div>
        </div>
      </div>
    </div>
  );
}